// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Store {
  id             Int        @id @default(autoincrement())
  name           String
  email          String     @unique
  identification String     @unique
  external_id    String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  User           User[]
  Product        Product[]
  Supplyer       Supplier[]
  Sale           Sale[]
}

model User {
  id              Int        @id @default(autoincrement())
  name            String
  email           String     @unique
  password        String?
  first_access    Boolean    @default(true)
  email_checked   Boolean    @default(false)
  forgotten_token String?
  access_level    Int        @default(1)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  storeId         Int
  Store           Store      @relation(fields: [storeId], references: [id], onDelete: Cascade)
  Product         Product[]
  Supplyer        Supplier[]
  Sale            Sale[]
  Variant         Variant[]
}

model Supplier {
  id             Int      @id @default(autoincrement())
  name           String
  identification String
  email          String
  eccomerceLink  String
  phone          String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  lastModifiedBy Int
  User           User     @relation(fields: [lastModifiedBy], references: [id])
  storeId        Int
  Store          Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
}

model Product {
  id                Int        @id @default(autoincrement())
  name              String
  sellPriceModifier Float
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  lastModifiedBy    Int
  User              User       @relation(fields: [lastModifiedBy], references: [id])
  storeId           Int
  Store             Store      @relation(fields: [storeId], references: [id], onDelete: Cascade)
  SaleItem          SaleItem[]
  Variant           Variant[]
}

model Variant {
  id             Int      @id @default(autoincrement())
  productId      Int
  name           String
  price          Int
  sku            String
  barcode        String
  amount         Int
  placeholder    String
  createdAt      DateTime @default(now())
  lastModifiedBy Int
  User           User     @relation(fields: [lastModifiedBy], references: [id])
  Product        Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Sale {
  id             Int        @id @default(autoincrement())
  customer       String
  createdAt      DateTime   @default(now())
  lastModifiedBy Int
  User           User       @relation(fields: [lastModifiedBy], references: [id])
  storeId        Int
  Store          Store      @relation(fields: [storeId], references: [id], onDelete: Cascade)
  SaleItem       SaleItem[]
}

model SaleItem {
  id        Int      @id @default(autoincrement())
  amount    Int
  sellPrice Float
  productId Int
  saleId    Int
  createdAt DateTime @default(now())
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  Sale      Sale     @relation(fields: [saleId], references: [id], onDelete: Cascade)
}
